<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">
	
<global-method-security pre-post-annotations="enabled" />

 <http use-expressions="true">
  <intercept-url pattern="/users**" access="hasRole('ROLE_ADMIN')" />
  <intercept-url pattern="/users/**" access="hasRole('ROLE_ADMIN')" />
  <intercept-url pattern="/account**" access="isAuthenticated()" />
  <intercept-url pattern="/upload**" access="hasRole('ROLE_TEACHER')" />
  <intercept-url pattern="/login**" access="!isAuthenticated()" />
  <form-login login-page="/login.html"/>
  <logout logout-url="/logout"/>
</http>

<authentication-manager>
  <authentication-provider>
<!--     <user-service>
      <user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" />
      <user name="nii" password="nii" authorities="ROLE_STUDENT" />
      <user name="neelam" password="nee" authorities="ROLE_TEACHER" />
    </user-service> -->
    
    <password-encoder hash="bcrypt" />
     
      <jdbc-user-service data-source-ref="dataSource" 
		authorities-by-username-query="select appuser.name, role.name from appuser
		join appuser_role on appuser.id = appuser_role.appusers_id
		join role on appuser_role.roles_id = role.id
		where appuser.name = ?"
	users-by-username-query="select name,password,enabled from appuser where name = ?" 
	
	/> 
	 
  </authentication-provider>
</authentication-manager>
</beans:beans>